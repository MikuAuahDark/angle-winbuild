name: win-build

on:
  push:
  schedule:
    - cron: '0 12 * * 0'

jobs:
  winbuild:
    name: Compile
    runs-on: windows-2022
    strategy:
      matrix:
        target-cpu: [x86, x64, arm64]
    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0
    steps:
    - name: Download Depot Tools
      shell: cmd
      run: curl -o depot_tools.zip https://storage.googleapis.com/chrome-infra/depot_tools.zip
    - name: Extract Depot Tools
      shell: cmd
      run: |
        mkdir depot_tools
        cd depot_tools
        7z x ..\depot_tools.zip
    - name: Initialize Depot Tools
      shell: cmd
      run: |
        cd depot_tools
        gclient
        exit /b 0
    - name: Prepend Depot Tools to PATH
      shell: cmd
      run: |
        cd depot_tools
        echo %CD% >> %GITHUB_PATH%
    - name: Clone ANGLE
      shell: cmd
      run: path && mkdir angle && cd angle && fetch angle
    - name: Configure ANGLE
      shell: cmd
      env:
        ANGLE_TARGET_CPU: ${{ matrix.target-cpu }}
      run: cd angle && gn gen out/Hello --args="target_cpu = \"%ANGLE_TARGET_CPU%\" is_debug = false is_component_build = false"
    - name: Build
      shell: cmd
      run: cd angle && autoninja -C out/Hello libEGL libGLESv2
    - name: Artifact Preparation
      shell: cmd
      run: |
        mkdir output
        copy angle\out\Hello\libEGL.dll output\libEGL.dll
        copy angle\out\Hello\libGLESv2.dll output\libGLESv2.dll
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: angle-${{ matrix.target-cpu }}
        path: output/
  release:
    name: Upload
    runs-on: ubuntu-latest
    needs: winbuild
    steps:
    - name: Install Zip
      run: sudo apt-get install --assume-yes zip curl
    - name: Download pyuploadtool
      run: curl -LO https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage && chmod +x pyuploadtool-x86_64.AppImage
    - name: Download Artifacts
      uses: actions/download-artifact@v2
    - name: List All Files
      run: ls -alFR
    - name: Zip x86 Binaries
      run: zip -j angle-win-x86.zip angle-x86/*
    - name: Zip AMD64 Binaries
      run: zip -j angle-win-AMD64.zip angle-x64/*
    - name: Zip ARM64 Binaries
      run: zip -j angle-win-arm64.zip angle-arm64/*
    - name: Upload to Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./pyuploadtool-x86_64.AppImage angle-win-*.zip
